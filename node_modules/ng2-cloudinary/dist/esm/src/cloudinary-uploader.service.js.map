{"version":3,"file":"cloudinary-uploader.service.js","sourceRoot":"","sources":["../../../src/cloudinary-uploader.service.ts"],"names":[],"mappings":";;;;;AAAA,cAAc,iBAAiB,CAAA;OACxB,EAAE,YAAY,EAAE,MAAM,iBAAiB;AAG9C,IAAM,eAAe,GAAW,kCAAkC,CAAC;AAEnE;IAAwC,sCAAY;IAOlD,4BAAmB,IAAuB;QACxC,kBAAM,EAAE,CAAC,CAAC;QACV,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC;QACjC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,YAAY,IAAI,MAAM,CAAC;QACjD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,IAAI,QAAQ,CAAC;QACnC,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAE3B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;QACtC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;IACpC,CAAC;IAEM,4CAAe,GAAtB,UAAuB,QAAa,EAAE,IAAS;QAC7C,IAAI,CAAC,MAAM,CAAC,eAAe,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;QAChD,uDAAuD;QACvD,QAAQ,CAAC,eAAe,GAAG,KAAK,CAAC;QACjC,MAAM,CAAC,EAAE,kBAAQ,EAAE,UAAI,EAAE,CAAC;IAC5B,CAAC;IAEO,gDAAmB,GAA3B;QACE,IAAI,CAAC,OAAO,CAAC,GAAG,GAAG,KAAG,eAAe,GAAG,IAAI,CAAC,SAAS,SAAI,IAAI,CAAC,YAAY,SAAI,IAAI,CAAC,IAAM,CAAC;IAC7F,CAAC;IAED,sBAAI,yCAAS;aAKb;YACE,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC;QACzB,CAAC;aAPD,UAAc,KAAa;YACzB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;YACxB,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAC7B,CAAC;;;OAAA;IAMD,sBAAI,4CAAY;aAKhB;YACE,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC;QAC5B,CAAC;aAPD,UAAiB,KAAa;YAC5B,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;YAC3B,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAC7B,CAAC;;;OAAA;IAMD,sBAAI,oCAAI;aAKR;YACE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC;QACpB,CAAC;aAPD,UAAS,KAAa;YACpB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;YACnB,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAC7B,CAAC;;;OAAA;IAOH,yBAAC;AAAD,CAAC,AAzDD,CAAwC,YAAY,GAyDnD","sourcesContent":["export * from 'ng2-file-upload'\nimport { FileUploader } from 'ng2-file-upload';\nimport { CloudinaryOptions } from './cloudinary-options.class';\n\nconst UPLOAD_ENDPOINT: string = 'https://api.cloudinary.com/v1_1/';\n\nexport class CloudinaryUploader extends FileUploader {\n\n  _cloudName: string;\n  _resourceType: string;\n  _type: string;\n  uploadPreset: string;\n\n  public constructor(opts: CloudinaryOptions) {\n    super({});\n    this._cloudName = opts.cloudName;\n    this._resourceType = opts.resourceType || 'auto';\n    this._type = opts.type || 'upload';\n    this._propagateUploadUrl();\n\n    this.uploadPreset = opts.uploadPreset;\n    this.autoUpload = opts.autoUpload;\n  }\n\n  public onBuildItemForm(fileItem: any, form: any): any {\n    form.append('upload_preset', this.uploadPreset);\n    // Force the file uploader to never use app credentials\n    fileItem.withCredentials = false;\n    return { fileItem, form };\n  }\n\n  private _propagateUploadUrl(): void {\n    this.options.url = `${UPLOAD_ENDPOINT}${this.cloudName}/${this.resourceType}/${this.type}`;\n  }\n\n  set cloudName(value: string) {\n    this._cloudName = value;\n    this._propagateUploadUrl();\n  }\n\n  get cloudName(): string {\n    return this._cloudName;\n  }\n\n  set resourceType(value: string) {\n    this._resourceType = value;\n    this._propagateUploadUrl();\n  }\n\n  get resourceType(): string {\n    return this._resourceType;\n  }\n\n  set type(value: string) {\n    this._type = value;\n    this._propagateUploadUrl();\n  }\n\n  get type(): string {\n    return this._type;\n  }\n\n\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}