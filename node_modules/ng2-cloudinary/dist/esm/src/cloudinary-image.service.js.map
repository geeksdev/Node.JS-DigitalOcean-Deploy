{"version":3,"file":"cloudinary-image.service.js","sourceRoot":"","sources":["../../../src/cloudinary-image.service.ts"],"names":[],"mappings":"OAAO,EAAE,UAAU,EAAE,MAAM,eAAe;AAI1C,IAAM,cAAc,GAAW,6BAA6B,CAAC;AAG7D;IAAA;IAiBA,CAAC;IAfG,4CAAW,GAAX,UAAY,QAAgB,EAAE,SAAiB,EAAE,YAAoB,EAAE,IAAY,EAAE,UAAgC;QACjH,MAAM,CAAE,cAAc;YAClB,SAAS,GAAG,GAAG;YACf,YAAY,GAAG,GAAG;YAClB,IAAI,GAAG,GAAG;YACV,UAAU,CAAC,YAAY,EAAE;YACzB,QAAQ,GAAG,GAAG,GAAG,CAAC,UAAU,CAAC,MAAM,IAAI,KAAK,CAAC,CAAC;IAEtD,CAAC;IACE,iCAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;KACnB,CAAC;IACF,kBAAkB;IACX,qCAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;IACF,6BAAC;AAAD,CAAC,AAjBD,IAiBC","sourcesContent":["import { Injectable } from '@angular/core';\nimport { CloudinaryOptions } from './cloudinary-options.class';\nimport { CloudinaryTransforms } from './cloudinary-transforms.class';\n\nconst CLOUDINARY_URL: string = 'https://res.cloudinary.com/';\n\n\nexport class CloudinaryImageService {\n\n    getImageUrl(publicId: string, cloudName: string, resourceType: string, type: string, transforms: CloudinaryTransforms): string {\n        return  CLOUDINARY_URL +\n            cloudName + '/' +\n            resourceType + '/' +\n            type + '/' +\n            transforms.toUrlSegment() +\n            publicId + '.' + (transforms.format || 'jpg');\n\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}