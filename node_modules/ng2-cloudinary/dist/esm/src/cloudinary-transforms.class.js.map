{"version":3,"file":"cloudinary-transforms.class.js","sourceRoot":"","sources":["../../../src/cloudinary-transforms.class.ts"],"names":[],"mappings":"AAAA;IAAA;IAqFA,CAAC;IA7BU,2CAAY,GAAnB;QACI,IAAI,gBAAgB,GAAW,EAAE,CAAC;QAElC,6BAA6B;QAC7B,GAAG,CAAC,CAAC,IAAI,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC;YACnB,EAAE,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,IAAI,GAAG,KAAK,QAAQ,CAAC,CAAC,CAAC;gBAC/C,gBAAgB,IAAI,IAAI,CAAC,iBAAiB,CAAC,gBAAgB,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;YACjF,CAAC;QACL,CAAC;QAED,EAAE,CAAC,CAAC,gBAAgB,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;YAC9B,gBAAgB,IAAI,GAAG,CAAC;QAC5B,CAAC;QAED,MAAM,CAAC,gBAAgB,CAAC;IAC5B,CAAC;IAEO,gDAAiB,GAAzB,UAA0B,OAAe,EAAE,cAAsB,EAAE,KAAU;QACzE,IAAI,UAAU,GAAW,EAAE,CAAC;QAE5B,EAAE,CAAC,CAAC,cAAc,IAAI,KAAK,CAAC,CAAC,CAAC;YAC1B,EAAE,CAAC,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;gBACrB,UAAU,IAAI,GAAG,CAAC;YACtB,CAAC;YAED,UAAU,IAAI,oBAAoB,CAAC,UAAU,CAAC,cAAc,CAAC,GAAG,GAAG,GAAG,KAAK,CAAC;QAChF,CAAC;QACD,MAAM,CAAC,UAAU,CAAC;IACtB,CAAC;IAnFM,+BAAU,GAAgC;QAC7C,OAAO,EAAW,GAAG;QACrB,QAAQ,EAAU,GAAG;QACrB,MAAM,EAAY,GAAG;QACrB,cAAc,EAAI,IAAI;QACtB,SAAS,EAAS,GAAG;QACrB,MAAM,EAAY,GAAG;QACrB,GAAG,EAAe,GAAG;QACrB,GAAG,EAAe,GAAG;QACrB,SAAS,EAAS,GAAG;QACrB,QAAQ,EAAU,GAAG;QACrB,OAAO,EAAW,GAAG;QACrB,QAAQ,EAAU,GAAG;QACrB,SAAS,EAAS,GAAG;QACrB,QAAQ,EAAU,IAAI;QACtB,YAAY,EAAM,GAAG;QACrB,SAAS,EAAS,GAAG;QACrB,UAAU,EAAQ,GAAG;QACrB,eAAe,EAAG,GAAG;QACrB,OAAO,EAAW,IAAI;QACtB,OAAO,EAAW,IAAI;QACtB,KAAK,EAAa,KAAK;QACvB,MAAM,EAAY,IAAI;QACtB,SAAS,EAAS,IAAI;QACtB,OAAO,EAAW,IAAI;QACtB,gBAAgB,EAAE,GAAG;KACxB,CAAC;IA0DN,2BAAC;AAAD,CAAC,AArFD,IAqFC","sourcesContent":["export class CloudinaryTransforms {\n    static URL_PARAMS: { [key: string] : string; } = {\n        'width'         : 'w',\n        'height'        : 'h',\n        'crop'          : 'c',\n        'aspect_ratio'  : 'ar',\n        'gravity'       : 'g',\n        'zoom'          : 'z',\n        'x'             : 'x',\n        'y'             : 'y',\n        'quality'       : 'q',\n        'radius'        : 'r',\n        'angle'         : 'a',\n        'effect'        : 'e',\n        'opacity'       : 'o',\n        'border'        : 'bo',\n        'background'    : 'b',\n        'overlay'       : 'l',\n        'underlay'      : 'u',\n        'default_image' : 'd',\n        'delay'         : 'dl',\n        'color'         : 'co',\n        'dpr'           : 'dpr',\n        'page'          : 'pg',\n        'density'       : 'dn',\n        'flags'         : 'fl',\n        'transformation': 't'\n    };\n\n    width: number;\n    height: number;\n    crop: string;\n    aspect_ratio: string;\n    gravity: string;\n    zoom: number;\n    x: number;\n    y: number;\n    format: string;\n    quality: string;\n    radius: string;\n    angle: string;\n    effect: string;\n    opacity: number;\n    border: string;\n    background: string;\n    overlay: string;\n    underlay: string;\n    default_image: string;\n    delay: number;\n    color: string;\n    dpr: string;\n    page: number;\n    density: number;\n    flags: string;\n    transformation: string;\n\n    public toUrlSegment(): string {\n        let transformSegment: string = '';\n\n        //Loop on all transformations\n        for (let key in this) {\n            if (this.hasOwnProperty(key) && key !== 'format') {\n                transformSegment += this.toPropertySegment(transformSegment, key, this[key]);\n            }\n        }\n\n        if (transformSegment.length > 0) {\n            transformSegment += '/';\n        }\n\n        return transformSegment;\n    }\n\n    private toPropertySegment(segment: string, transformation: string, value: any): string {\n        let newSegment: string = '';\n\n        if (transformation && value) {\n            if (segment.length > 0) {\n                newSegment += ',';\n            }\n\n            newSegment += CloudinaryTransforms.URL_PARAMS[transformation] + '_' + value;\n        }\n        return newSegment;\n    }\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}