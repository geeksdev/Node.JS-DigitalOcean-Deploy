import { Component, Input } from '@angular/core';
import { CloudinaryTransforms } from './cloudinary-transforms.class';
import { CloudinaryImageService } from './cloudinary-image.service';
export var CloudinaryImageComponent = (function () {
    function CloudinaryImageComponent(_imageService) {
        this._imageService = _imageService;
        this.imageUrl = '';
        this.transforms = new CloudinaryTransforms();
    }
    CloudinaryImageComponent.prototype.ngOnChanges = function (changes) {
        if (this.publicId && this.cloudName) {
            var resourceType = 'image';
            var type = this.type || 'upload';
            this.imageUrl = this._imageService.getImageUrl(this.publicId, this.cloudName, resourceType, type, this.transforms);
        }
        else {
            this.imageUrl = '';
        }
    };
    Object.defineProperty(CloudinaryImageComponent.prototype, "width", {
        set: function (value) {
            this.transforms.width = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CloudinaryImageComponent.prototype, "height", {
        set: function (value) {
            this.transforms.height = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CloudinaryImageComponent.prototype, "crop", {
        set: function (value) {
            this.transforms.crop = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CloudinaryImageComponent.prototype, "aspect_ratio", {
        set: function (value) {
            this.transforms.aspect_ratio = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CloudinaryImageComponent.prototype, "gravity", {
        set: function (value) {
            this.transforms.gravity = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CloudinaryImageComponent.prototype, "zoom", {
        set: function (value) {
            this.transforms.zoom = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CloudinaryImageComponent.prototype, "x", {
        set: function (value) {
            this.transforms.x = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CloudinaryImageComponent.prototype, "y", {
        set: function (value) {
            this.transforms.y = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CloudinaryImageComponent.prototype, "format", {
        set: function (value) {
            this.transforms.format = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CloudinaryImageComponent.prototype, "quality", {
        set: function (value) {
            this.transforms.quality = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CloudinaryImageComponent.prototype, "radius", {
        set: function (value) {
            this.transforms.radius = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CloudinaryImageComponent.prototype, "angle", {
        set: function (value) {
            this.transforms.angle = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CloudinaryImageComponent.prototype, "effect", {
        set: function (value) {
            this.transforms.effect = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CloudinaryImageComponent.prototype, "opacity", {
        set: function (value) {
            this.transforms.opacity = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CloudinaryImageComponent.prototype, "border", {
        set: function (value) {
            this.transforms.border = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CloudinaryImageComponent.prototype, "background", {
        set: function (value) {
            this.transforms.background = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CloudinaryImageComponent.prototype, "overlay", {
        set: function (value) {
            this.transforms.overlay = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CloudinaryImageComponent.prototype, "underlay", {
        set: function (value) {
            this.transforms.underlay = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CloudinaryImageComponent.prototype, "default_image", {
        set: function (value) {
            this.transforms.default_image = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CloudinaryImageComponent.prototype, "delay", {
        set: function (value) {
            this.transforms.delay = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CloudinaryImageComponent.prototype, "color", {
        set: function (value) {
            this.transforms.color = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CloudinaryImageComponent.prototype, "dpr", {
        set: function (value) {
            this.transforms.dpr = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CloudinaryImageComponent.prototype, "page", {
        set: function (value) {
            this.transforms.page = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CloudinaryImageComponent.prototype, "density", {
        set: function (value) {
            this.transforms.density = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CloudinaryImageComponent.prototype, "flags", {
        set: function (value) {
            this.transforms.flags = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CloudinaryImageComponent.prototype, "transformation", {
        set: function (value) {
            this.transforms.transformation = value;
        },
        enumerable: true,
        configurable: true
    });
    CloudinaryImageComponent.decorators = [
        { type: Component, args: [{
                    selector: 'cl-image',
                    template: "\n    <img [src]=\"imageUrl\" [title]=\"title ||\u00A0''\" [alt]=\"alt ||\u00A0''\">\n  "
                },] },
    ];
    /** @nocollapse */
    CloudinaryImageComponent.ctorParameters = function () { return [
        { type: CloudinaryImageService, },
    ]; };
    CloudinaryImageComponent.propDecorators = {
        'publicId': [{ type: Input, args: ['public-id',] },],
        'cloudName': [{ type: Input, args: ['cloud-name',] },],
        'type': [{ type: Input },],
        'title': [{ type: Input },],
        'alt': [{ type: Input },],
        'width': [{ type: Input },],
        'height': [{ type: Input },],
        'crop': [{ type: Input },],
        'aspect_ratio': [{ type: Input, args: ['aspect-ratio',] },],
        'gravity': [{ type: Input },],
        'zoom': [{ type: Input },],
        'x': [{ type: Input },],
        'y': [{ type: Input },],
        'format': [{ type: Input },],
        'quality': [{ type: Input },],
        'radius': [{ type: Input },],
        'angle': [{ type: Input },],
        'effect': [{ type: Input },],
        'opacity': [{ type: Input },],
        'border': [{ type: Input },],
        'background': [{ type: Input },],
        'overlay': [{ type: Input },],
        'underlay': [{ type: Input },],
        'default_image': [{ type: Input, args: ['default-image',] },],
        'delay': [{ type: Input },],
        'color': [{ type: Input },],
        'dpr': [{ type: Input },],
        'page': [{ type: Input },],
        'density': [{ type: Input },],
        'flags': [{ type: Input },],
        'transformation': [{ type: Input },],
    };
    return CloudinaryImageComponent;
}());
//# sourceMappingURL=cloudinary-image.component.js.map