{
  "version": 3,
  "file": "ng2-adsense.umd.js",
  "sources": [
    "ng://ng2-adsense/out/adsense.module.ts",
    "ng://ng2-adsense/out/adsense.component.ts",
    "ng://ng2-adsense/out/adsense-config.ts"
  ],
  "sourcesContent": [
    "import { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\n\nimport { AdsenseConfig, ADSENSE_TOKEN } from './adsense-config';\nimport { AdsenseComponent } from './adsense.component';\n\n@NgModule({\n  imports: [CommonModule],\n  exports: [AdsenseComponent],\n  declarations: [AdsenseComponent],\n})\nexport class AdsenseModule {\n  static forRoot(config: Partial<AdsenseConfig> = {}): ModuleWithProviders {\n    return {\n      ngModule: AdsenseModule,\n      providers: [{ provide: ADSENSE_TOKEN, useValue: config }],\n    };\n  }\n}\n",
    "import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  Inject,\n  Input,\n  OnInit,\n} from '@angular/core';\n\nimport { AdsenseConfig, ADSENSE_TOKEN } from './adsense-config';\n\n@Component({\n  selector: 'ng2-adsense,ng-adsense',\n  template: `\n  <ins class=\"adsbygoogle\"\n    [ngStyle]=\"{'display': display, 'width.px': width, 'height.px': height }\"\n    [attr.data-ad-client]=\"adClient\"\n    [attr.data-ad-slot]=\"adSlot\"\n    [attr.data-ad-format]=\"adFormat\"\n    [attr.data-ad-region]=\"adRegion\"\n    [attr.data-layout]=\"layout\"\n    [attr.data-adtest]=\"adtest\"\n    [attr.data-layout-key]=\"layoutKey\">\n  </ins>\n  `,\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AdsenseComponent implements OnInit, AfterViewInit {\n  /** adsense account ca-pub-XXXXXXXXXXXXXXXX */\n  @Input() adClient: string;\n  /** ad slot/number */\n  @Input() adSlot: string | number;\n  @Input() adFormat: string;\n  /** can be manually set if you need all ads on a page to have same id page-xxx */\n  @Input() adRegion = 'page-' + Math.floor(Math.random() * 10000) + 1;\n  /** ins element display style */\n  @Input() display: string;\n  /** ins element height in px */\n  @Input() width: number;\n  /** ins element width in px */\n  @Input() height: number;\n  /** used for in-feed ads */\n  @Input() layout: string;\n  /** used for in-feed ads */\n  @Input() layoutKey: string;\n  /** enable page-level ads */\n  @Input() pageLevelAds: boolean;\n  /** on first load sometimes adsense is not ready */\n  @Input() timeOutRetry: number;\n  /** sets up some sort of google test ad */\n  @Input() adtest: string;\n\n  constructor(\n    @Inject(ADSENSE_TOKEN) private config: AdsenseConfig,\n  ) {}\n\n  ngOnInit() {\n    const config = this.config;\n    function use<T>(source: T, defaultValue: T): T {\n      return config && source !== undefined ? source : defaultValue;\n    }\n    this.adClient = use(this.adClient, config.adClient);\n    this.adSlot = use(this.adSlot, config.adSlot);\n    this.adFormat = use(this.adFormat, config.adFormat || 'auto');\n    this.display = use(this.display, config.display || 'block');\n    this.width = use(this.width, config.width);\n    this.height = use(this.height, config.height);\n    this.layout = use(this.layout, config.layout);\n    this.layoutKey = use(this.layoutKey, config.layoutKey);\n    this.pageLevelAds = use(this.pageLevelAds, config.pageLevelAds);\n    this.timeOutRetry = use(this.timeOutRetry, config.timeOutRetry || 200);\n    this.adtest = use(this.adtest, config.adtest);\n  }\n\n  /**\n   * attempts to push the ad twice. Usually if one doesn't work the other\n   * will depeding on if the browser has the adsense code cached and\n   * if its the first page to be loaded\n   */\n  ngAfterViewInit() {\n    const res = this.push();\n    if (res instanceof TypeError) {\n      setTimeout(() => this.push(), this.timeOutRetry);\n    }\n  }\n\n  push() {\n    const p: any = {};\n    if (this.pageLevelAds) {\n      p.google_ad_client = this.adClient;\n      p.enable_page_level_ads = true;\n    }\n    try {\n      const adsbygoogle = window['adsbygoogle'];\n      adsbygoogle.push(p);\n      return true;\n    } catch (e) {\n      return e;\n    }\n  }\n}\n\n",
    "import { InjectionToken } from '@angular/core';\n\n/**\n * Set optional global default values\n */\nexport interface AdsenseConfig {\n  /** adsense account ca-pub-XXXXXXXXXXXXXXXX */\n  adClient: string;\n  /** ad slot/number */\n  adSlot: string | number;\n  /** data-ad-format default: auto */\n  adFormat: string;\n  /** ins element display style */\n  display: string;\n  /** ins element height in px */\n  width: number;\n  /** ins element width in px */\n  height: number;\n  /** used for in-feed ads */\n  layout: string;\n  /** used for in-feed ads */\n  layoutKey: string;\n  /** enable page-level ads */\n  pageLevelAds: boolean;\n  /** on first load sometimes adsense is not ready */\n  timeOutRetry: number;\n  adtest: string;\n}\n\nexport const ADSENSE_TOKEN = new InjectionToken<AdsenseConfig>(\n  'AdsenseConfig',\n);\n"
  ],
  "names": [
    "CommonModule",
    "NgModule",
    "Input",
    "Inject",
    "ChangeDetectionStrategy",
    "Component",
    "InjectionToken"
  ],
  "mappings": "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"
}
